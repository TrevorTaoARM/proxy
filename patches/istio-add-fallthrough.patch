diff --git a/src/envoy/tcp/metadata_exchange/metadata_exchange.cc b/src/envoy/tcp/metadata_exchange/metadata_exchange.cc
index 84d96d2..12d5943 100644
--- a/src/envoy/tcp/metadata_exchange/metadata_exchange.cc
+++ b/src/envoy/tcp/metadata_exchange/metadata_exchange.cc
@@ -80,6 +80,7 @@ Network::FilterStatus MetadataExchangeFilter::onData(Buffer::Instance& data,
                                                      bool) {
   switch (conn_state_) {
     case Invalid:
+      FALLTHRU;
     case Done:
       // No work needed if connection state is Done or Invalid.
       return Network::FilterStatus::Continue;
@@ -93,6 +94,7 @@ Network::FilterStatus MetadataExchangeFilter::onData(Buffer::Instance& data,
       }
       conn_state_ = WriteMetadata;
       config_->stats().alpn_protocol_found_.inc();
+      FALLTHRU;
     }
     case WriteMetadata: {
       // TODO(gargnupur): Try to move this just after alpn protocol is
@@ -100,6 +102,7 @@ Network::FilterStatus MetadataExchangeFilter::onData(Buffer::Instance& data,
       // If downstream filter, write metadata.
       // Otherwise, go ahead and try to read initial header and proxy data.
       writeNodeMetadata();
+      FALLTHRU;
     }
     case ReadingInitialHeader:
     case NeedMoreDataInitialHeader: {
@@ -110,6 +113,7 @@ Network::FilterStatus MetadataExchangeFilter::onData(Buffer::Instance& data,
       if (conn_state_ == Invalid) {
         return Network::FilterStatus::Continue;
       }
+      FALLTHRU;
     }
     case ReadingProxyHeader:
     case NeedMoreDataProxyHeader: {
@@ -120,6 +124,7 @@ Network::FilterStatus MetadataExchangeFilter::onData(Buffer::Instance& data,
       if (conn_state_ == Invalid) {
         return Network::FilterStatus::Continue;
       }
+      FALLTHRU;
     }
     default:
       conn_state_ = Done;
@@ -148,11 +153,13 @@ Network::FilterStatus MetadataExchangeFilter::onWrite(Buffer::Instance&, bool) {
         conn_state_ = WriteMetadata;
         config_->stats().alpn_protocol_found_.inc();
       }
+      FALLTHRU;
     }
     case WriteMetadata: {
       // TODO(gargnupur): Try to move this just after alpn protocol is
       // determined and first onWrite is called in Upstream filter.
       writeNodeMetadata();
+      FALLTHRU;
     }
     case ReadingInitialHeader:
     case ReadingProxyHeader:
